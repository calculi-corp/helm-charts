clusterAgent:
  replicas: 2
  createPodDisruptionBudget: true
  enabled: true
  env:
    - name: DD_ORCHESTRATOR_EXPLORER_CUSTOM_SENSITIVE_WORDS
      value: "cert key token trust"
agents:
  podSecurity:
    securityContextConstraints:
      create: true
  containers:
    processAgent:
      env:
      - name: DD_ORCHESTRATOR_EXPLORER_CUSTOM_SENSITIVE_WORDS
        value: "cert key token trust"
clusterChecksRunner:
  enabled: true
datadog:
#  kubelet:
#    tlsVerify: false
#    host:
#      valueFrom:
#        fieldRef:
#          fieldPath: status.hostIP
  clusterChecks:
    enabled: true
  clusterName: <insert your Kubernetes cluster name here>
  apiKey: <insert your Datadog API key here>
  appKey: <insert your Datadog Application key here>
  logs:
    enabled: true
    containerCollectAll: true
    containerCollectUsingFiles: true
  processAgent:
    processCollection: true
  tags:
    customer: <insert the customer name for the installation here>
  dogstatsd:
    originDetection: true
    useHostPort: true
    useHostPID: true
  env:
    - name: DD_DOGSTATSD_STATS_ENABLE
      value: "true"
    - name: DD_DOGSTATSD_NON_LOCAL_TRAFFIC
      value: "true"
agents:
  volumes: 
    - name: consul-empty-dir
      emptyDir: {}
    - name: redis-empty-dir
      emptyDir: {}
  volumeMounts:
    - name: consul-empty-dir
      mountPath: /etc/datadog-agent/conf.d/consul.d
    - name: redis-empty-dir
      mountPath: /etc/datadog-agent/conf.d/redisdb.d
